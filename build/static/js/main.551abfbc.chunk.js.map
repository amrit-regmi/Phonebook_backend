{"version":3,"sources":["Components/Filter.js","Components/NewPersonForm.js","Components/Person.js","Components/Persons.js","Services/phonebookService.js","Components/Notification.js","App.js","index.js"],"names":["Filter","filterPeople","onChange","NewPersonForm","nameInputChange","numberInputChange","newName","newNumber","addName","value","type","onClick","Person","person","deletePerson","name","number","Persons","persons","onDelete","map","p","key","id","baseUrl","axios","get","then","response","data","post","delete","put","Notification","notificatons","notification","className","message","App","useState","setPersons","setNewName","setNewNumber","filterText","setFilterText","notifications","setNotifications","useEffect","phonebookService","personData","filtered","filter","toLowerCase","includes","event","target","preventDefault","duplicate","find","window","alert","confirm","updatedPerson","r","setTimeout","concat","per","catch","error","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.551abfbc.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({filterPeople}) =>{\r\n    return( \r\n        <div>\r\n            Filter shown with: <input onChange = {filterPeople}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\nconst NewPersonForm = ({nameInputChange,numberInputChange,newName,newNumber,addName}) =>{\r\n    return(\r\n    <form>\r\n        <div>\r\n        name: <input onChange={nameInputChange} value = {newName}/>\r\n        </div>\r\n        <div>\r\n        number: <input onChange={numberInputChange} value = {newNumber}/>\r\n        </div>\r\n\r\n        <div>\r\n          <button type=\"submit\" onClick={addName}  >add</button>\r\n        </div>\r\n    </form>\r\n    )\r\n}\r\nexport default NewPersonForm","import React from 'react'\r\n\r\nconst Person =({person,deletePerson}) => {\r\n    \r\n    return (\r\n        \r\n        <li >{person.name} {person.number} <button onClick={()=> deletePerson(person)}>Delete</button></li>\r\n    )\r\n}\r\nexport default Person","import React from 'react'\r\nimport Person from './Person'\r\n\r\nconst Persons =({persons,onDelete})=> {\r\n    return(    \r\n    <ul>  \r\n        {persons.map(p => \r\n        <Person key={p.id} person={p} deletePerson ={onDelete} ></Person>)\r\n         }         \r\n    </ul>\r\n    )\r\n}\r\n\r\nexport default Persons","import axios from 'axios'\r\n\r\nconst baseUrl ='/api/persons'\r\n\r\n\r\nconst getPersons = () =>{\r\n    \r\n    return( axios.get(baseUrl).then(response => response.data))\r\n} \r\n\r\nconst createPerson = person =>{\r\n    return (axios.post(baseUrl,person).then(response=>response.data))\r\n}\r\n\r\nconst deletePerson = id =>{\r\n    return (axios.delete(`${baseUrl}/${id}`).then(response=>response.data))\r\n}\r\n\r\nconst updatePerson = person =>{\r\n    return (axios.put(`${baseUrl}/${person.id}`,person).then(response=>{\r\n        return response.data}))\r\n}\r\nexport default {getPersons,createPerson,deletePerson,updatePerson}","import React from 'react'\r\nconst Notification = ({notificatons}) =>{\r\n    if(notificatons ===null){\r\n      return null\r\n    }\r\n    return(\r\n      <div>\r\n        {notificatons.map(notification => <div key={notification.id} className={notification.type}>{notification.message}</div>)}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Notification","import React, { useState, useEffect } from 'react'\nimport Filter from './Components/Filter'\nimport NewPersonForm from './Components/NewPersonForm'\nimport Persons from './Components/Persons'\nimport phonebookService from './Services/phonebookService'\nimport './index.css'\nimport Notification from './Components/Notification'\n\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [filterText,setFilterText] = useState('')\n  const [notifications,setNotifications] = useState([])\n\n  useEffect(()=>{\n    phonebookService.getPersons().then(personData=>setPersons(personData) )\n  },[])\n\n  const filtered = persons.filter(person=>person.name.toLowerCase().includes(filterText))\n\n  \n  const addName = (event) => {\n    event.preventDefault()\n\n    if(newName===\"\" || newNumber ===\"\"){\n      window.alert(\"Name and number must not be empty\")\n      return\n    }\n    \n    let duplicate = persons.find(person => person.name.toLowerCase() === newName.toLowerCase() || person.number === newNumber)\n    \n    if (duplicate){\n      if (duplicate.number === newNumber && duplicate.name.toLowerCase() === newName.toLowerCase()){\n        window.alert(`${newName}: ${newNumber} already exists on phonebook`)\n        return\n      }\n        \n      if (duplicate.name.toLowerCase()=== newName.toLowerCase()){\n        if(window.confirm(`${newName} is already added to phonebook, replace old number with new one? ` )){\n            const updatedPerson = { ...duplicate, number: newNumber}\n            phonebookService.updatePerson(updatedPerson).then(r => {\n              setPersons(persons.map(p => p.id !== updatedPerson.id ? p : r))\n            }).then(()=>{\n              setNotifications([{id: 1, type:'success',message:`Replaced old number for ${newName} with ${newNumber}`}])\n              setTimeout(() => {\n                setNotifications(null)\n              }, 5000)\n            })\n          }\n        return\n      } \n        \n      if(duplicate.number === newNumber){\n        if(window.confirm(`${newNumber} already exists on phonebook for ${newName} , replace old name with new one? ` )){\n          const updatedPerson = { ...duplicate, name: newName}\n          phonebookService.updatePerson(updatedPerson).then(r => {\n            setPersons(persons.map(p => p.id !== updatedPerson.id ? p : r))\n          }).then(()=>{\n            setNotifications([{id: 1 ,type:'success',message:`Replaced contact name for ${newNumber} with ${newName}`}])})\n            setTimeout(() => {\n              setNotifications(null)\n            }, 5000)\n        }\n      return\n      }\n\n    } \n    else{\n      const newPerson = {name: newName,number: newNumber}\n      phonebookService.createPerson(newPerson).then(p=>setPersons(persons.concat(p))).then(p=>{\n        setNewName('') \n        setNewNumber('') \n        }).then(()=>{\n            setNotifications([{id: 1,type:'success',message:`Added contact ${newName}`}])\n            setTimeout(() => {\n            setNotifications(null)\n          }, 5000)\n        }\n          \n          )\n    }\n  }\n\n\n  const deletePerson = (person) =>{\n    if (window.confirm(`Delete ${person.name}?`)){\n      phonebookService.deletePerson(person.id).then(p=>{\n        setPersons(persons.filter(per=> per.id !== person.id))\n      }).catch(error =>{\n        setNotifications([{id: 1,type:'error',message:`Information on ${person.name} has already been removed from server`}])\n        setPersons(persons.filter(per=> per.id !== person.id))\n        setTimeout(() => {\n          setNotifications(null)\n        }, 5000)\n      })\n    }\n\n  }\n\n  const nameInputChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const numberInputChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const filterPeople=(event)=>{\n    setFilterText(event.target.value.toLowerCase())\n  }\n\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notificatons ={notifications}></Notification>\n      <Filter filterPeople={filterPeople}></Filter>\n      <NewPersonForm\n          nameInputChange ={nameInputChange}\n          newName={newName}\n          numberInputChange={numberInputChange}\n          newNumber={newNumber}\n          addName={addName}\n          > \n      </NewPersonForm>\n      <h2>Numbers</h2>\n      <Persons persons={filtered} onDelete={deletePerson}></Persons> \n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}